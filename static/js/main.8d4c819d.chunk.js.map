{"version":3,"sources":["Thermometer.jsx","LinearSlider.jsx","RadialSlider.jsx","Widget.jsx","App.js","reportWebVitals.js","index.js"],"names":["Thermometer","props","handleChange","bind","handleClickAway","state","error","e","this","onTemperatureChange","target","value","currTemperature","setState","console","log","ClickAwayListener","onClickAway","FormControl","Input","type","id","onChange","endAdornment","InputAdornment","position","aria-describedby","inputProps","FormHelperText","React","Component","degToRad","deg","Math","PI","getKnobCoords","rad","cos","sin","RadialSlider","handleMouseMove","handleMouseDown","handleMouseUp","componentDidMount","componentWillUnmount","updateWindowDimensions","windowWidth","window","innerWidth","xknob","yknob","xcord","ycord","isMouseDown","addEventListener","removeEventListener","pageX","pageY","distFromX","distFromY","radians","atan2","adjRad","tt","floor","targetTemperature","width","height","overflow","onMouseMove","onMouseUp","fill","cx","cy","r","onMouseDown","style","cursor","x","y","text-anchor","class","Widget","handleCurrTempChange","handleTargetTempChange","mode","getMode","Grid","container","direction","spacing","justify","alignItems","item","xs","marginTop","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d4c819d.chunk.js","sourcesContent":["import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nclass Thermometer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickAway = this.handleClickAway.bind(this);\n    this.state = { error: false };\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  handleClickAway(e) {\n    if (this.props.currTemperature >= 32 && this.props.currTemperature <= 100) {\n      this.setState({ error: false });\n    } else {\n      console.log(this.props.currTemperature);\n      this.setState({ error: true });\n    }\n  }\n\n  render() {\n    const currTemperature = this.props.currTemperature;\n    const error = this.state.error;\n    return (\n      <ClickAwayListener onClickAway={this.handleClickAway}>\n        <FormControl>\n          <Input\n            error={error}\n            type=\"number\"\n            id=\"current-temperature-input\"\n            value={currTemperature}\n            onChange={this.handleChange}\n            endAdornment={<InputAdornment position=\"end\">°F</InputAdornment>}\n            aria-describedby=\"current-temperature-input-helper-text\"\n            inputProps={{\n              \"aria-label\": \"currTemp\",\n            }}\n          />\n          <FormHelperText id=\"current-temperature-input-helper-text\">\n            {error ? 'Only between 32°F to 100°F' : 'Current Temperature'}\n          </FormHelperText>\n        </FormControl>\n      </ClickAwayListener>\n    );\n  }\n}\n\nexport default Thermometer;\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\n\nclass LinearSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, value) {\n    this.props.onTemperatureChange(value)\n  }\n\n  render() {\n    const targetTemperature = this.props.targetTemperature;\n\n    return (\n      <div>\n        <Slider\n          value={targetTemperature}\n          onChange={this.handleChange}\n          valueLabelDisplay=\"auto\"\n          min={50}\n          max={80}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LinearSlider;\n","import React from \"react\";\n\nfunction radToDegree(rad) {\n  /**\n   * For testing purposes\n   */\n  return rad * 180 / Math.PI;\n}\n\nfunction degToRad(deg) {\n  return deg * Math.PI / 180;\n}\n\nfunction getKnobCoords(rad) {\n  return [100 - Math.cos(rad) * 100, 100 - Math.sin(rad) * 100];\n}\n\nclass RadialSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.state = {\n      windowWidth: window.innerWidth,\n      xknob: 100 - Math.cos(degToRad(174)) * 100,\n      yknob: 100 - Math.sin(degToRad(174)) * 100,\n      xcord: 0,\n      ycord: 0,\n      isMouseDown: false,\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      windowWidth: window.innerWidth,\n    });\n  }\n\n  handleMouseMove(e) {\n    this.setState({ xcord: e.pageX, ycord: e.pageY });\n    if (this.state.isMouseDown) {\n      const centreX = this.state.windowWidth / 2; // because circle is in horizontal centre of page\n      const centreY = 150; // 10px margin and 100px radius\n      const distFromX = centreX - this.state.xcord;\n      const distFromY = centreY - this.state.ycord;\n      const radians = Math.atan2(distFromY, distFromX);\n      if (radians <= 180 && radians > -Math.PI / 2) {\n        const adjRad = radians + Math.PI / 2;\n        const tt = Math.floor(adjRad / (Math.PI / 15) + 50);\n        this.props.onTemperatureChange(tt);\n      } else if (radians >=0 && radians < Math.PI / 2) {\n        const adjRad = radians + Math.PI / 2;\n        const tt = Math.floor(adjRad / (Math.PI / 15) + 50);\n        this.props.onTemperatureChange(tt);\n      } else if (radians >= Math.PI / 2 && radians <= Math.PI) {\n        const adjRad = radians + Math.PI / 2;\n        const tt = Math.floor(adjRad / (Math.PI / 15) + 50);\n        this.props.onTemperatureChange(tt);\n      } else {\n        const adjRad = radians + (2.5 * Math.PI);\n        const tt = Math.floor(adjRad / (Math.PI / 15) + 50);\n        this.props.onTemperatureChange(tt);\n      }\n      // mathpi / 15 = 1 fahrenheit\n      this.setState({ xknob: getKnobCoords(radians)[0] });\n      this.setState({ yknob: getKnobCoords(radians)[1] });\n      console.log(radToDegree(radians))\n    }\n  }\n\n  handleMouseDown(e) {\n    this.setState({ isMouseDown: true });\n  }\n\n  handleMouseUp(e) {\n    this.setState({ isMouseDown: false });\n  }\n\n  // TODO: Fix starting point xknob and yknob error at 72F\n  render() {\n    const xknob = this.state.xknob;\n    const yknob = this.state.yknob;\n    const targetTemperature = this.props.targetTemperature;\n\n    return (\n      <div>\n        <svg width=\"200px\" height=\"200px\" overflow=\"visible\">\n          <circle\n            onMouseMove={this.handleMouseMove}\n            onMouseUp={this.handleMouseUp}\n            fill=\"#D1D5DB\"\n            cx=\"100\"\n            cy=\"100\"\n            r=\"100\"\n          />\n          <circle\n            fill=\"#9CA3AF\"\n            cx={xknob}\n            cy={yknob}\n            r=\"10\"\n            onMouseDown={this.handleMouseDown}\n            onMouseUp={this.handleMouseUp}\n            style={{ cursor: \"pointer\" }}\n          />\n          <text x=\"100\" y=\"100\" text-anchor=\"middle\" class=\"small\">\n            {targetTemperature}°F\n          </text>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default RadialSlider;\n","import React from \"react\";\nimport Thermometer from \"./Thermometer\";\nimport LinearSlider from \"./LinearSlider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RadialSlider from \"./RadialSlider\";\n\nconst dT = 2;\nconst dTCool = 1.5;\nconst dTHeat = 1.5;\n\nfunction getMode(currTemperature, targetTemperature) {\n  if (currTemperature < targetTemperature - dT - dTHeat) {\n    return \"heating\";\n  } else if (currTemperature > targetTemperature + dT + dTCool) {\n    return \"cooling\";\n  } else {\n    return \"off\";\n  }\n}\n\nclass Widget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCurrTempChange = this.handleCurrTempChange.bind(this);\n    this.handleTargetTempChange = this.handleTargetTempChange.bind(this);\n    this.state = { currTemperature: 72, targetTemperature: 72, mode: \"off\" };\n  }\n\n  handleCurrTempChange(currTemperature) {\n    this.setState({ currTemperature });\n  }\n\n  handleTargetTempChange(targetTemperature) {\n      this.setState({ targetTemperature });\n  }\n\n  render() {\n    const currTemperature = this.state.currTemperature;\n    const targetTemperature = this.state.targetTemperature;\n    const mode = getMode(currTemperature, targetTemperature);\n\n    return (\n      <div>\n        <Grid\n          container\n          direction=\"column\"\n          spacing={3}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={4} style={{ width: \"100%\", marginTop: \"50px\" }}>\n            <RadialSlider\n              onTemperatureChange={this.handleTargetTempChange}\n              targetTemperature={targetTemperature}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <p>Mode: {mode}</p>\n            <p>Current temperature: {currTemperature}°F</p>\n          </Grid>\n          <Grid item xs={12}>\n            <Thermometer\n              currTemperature={currTemperature}\n              onTemperatureChange={this.handleCurrTempChange}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n","import './App.css';\nimport Widget from './Widget.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}